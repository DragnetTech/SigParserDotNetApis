using System;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace SigParser.Model {

  /// <summary>
  /// 
  /// </summary>
  [DataContract]
  public class DragnetTechSharedIPAASModelsTag {
    /// <summary>
    /// Gets or Sets Tagid
    /// </summary>
    [DataMember(Name="tagid", EmitDefaultValue=false)]
    [JsonProperty(PropertyName = "tagid")]
    public Guid? Tagid { get; set; }

    /// <summary>
    /// The type of tag. In the website this is called a Bucket Type. Example: Email Folder, Role
    /// </summary>
    /// <value>The type of tag. In the website this is called a Bucket Type. Example: Email Folder, Role</value>
    [DataMember(Name="type", EmitDefaultValue=false)]
    [JsonProperty(PropertyName = "type")]
    public string Type { get; set; }

    /// <summary>
    /// Gets or Sets Name
    /// </summary>
    [DataMember(Name="name", EmitDefaultValue=false)]
    [JsonProperty(PropertyName = "name")]
    public string Name { get; set; }

    /// <summary>
    /// The name of the connector. If the connector type is a mailbox type then this would be an email address.
    /// </summary>
    /// <value>The name of the connector. If the connector type is a mailbox type then this would be an email address.</value>
    [DataMember(Name="connectorname", EmitDefaultValue=false)]
    [JsonProperty(PropertyName = "connectorname")]
    public string Connectorname { get; set; }

    /// <summary>
    /// Type of connector this tag was generated by. Examples: Exchange, Office365, IMAP, Google, MailChimp, ConstantContact
    /// </summary>
    /// <value>Type of connector this tag was generated by. Examples: Exchange, Office365, IMAP, Google, MailChimp, ConstantContact</value>
    [DataMember(Name="connectortype", EmitDefaultValue=false)]
    [JsonProperty(PropertyName = "connectortype")]
    public string Connectortype { get; set; }


    /// <summary>
    /// Get the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()  {
      var sb = new StringBuilder();
      sb.Append("class DragnetTechSharedIPAASModelsTag {\n");
      sb.Append("  Tagid: ").Append(Tagid).Append("\n");
      sb.Append("  Type: ").Append(Type).Append("\n");
      sb.Append("  Name: ").Append(Name).Append("\n");
      sb.Append("  Connectorname: ").Append(Connectorname).Append("\n");
      sb.Append("  Connectortype: ").Append(Connectortype).Append("\n");
      sb.Append("}\n");
      return sb.ToString();
    }

    /// <summary>
    /// Get the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public string ToJson() {
      return JsonConvert.SerializeObject(this, Formatting.Indented);
    }

}
}
